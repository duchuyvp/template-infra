apiVersion: v1
kind: PersistentVolume
metadata:
  name: minio-pv
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 100Gi
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-csi-retain
  volumeMode: Filesystem
  csi:
    driver: nfs.csi.k8s.io
    volumeAttributes:
      server: 192.168.1.10
      share: /kubedata
      subDir: persistent-data/minio # This is the directory in the shared folder on NFS server that I want it to create
    volumeHandle: minio-pv
  mountOptions:
    - nfsvers=4.1
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: persistent-data
type: Opaque
data:
  MINIO_ACCESS_KEY: YWRtaW4=
  MINIO_SECRET_KEY: eTl3YjNOMFoz
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: persistent-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs-csi-retain
  volumeMode: Filesystem
  volumeName: minio-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: persistent-data
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: quay.io/minio/minio:latest
          args:
            - server
            - /data
            - --console-address
            - ":9001"
          envFrom:
            - secretRef:
                name: minio-secret
          ports:
            - containerPort: 9000
            - containerPort: 9001
          volumeMounts:
            - name: minio-data
              mountPath: /data
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: persistent-data
  labels:
    app: minio
spec:
  selector:
    app: minio
  ports:
    - name: http
      port: 9000
      targetPort: 9000
    - name: console
      port: 9001
      targetPort: 9001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio
  namespace: persistent-data
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: minio.lunalovegood.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio
                port:
                  number: 9001
  tls:
    - hosts:
        - minio.lunalovegood.dev
      secretName: minio-tls

      
